{
  "hash": "38a4c7d77e914382d27d3bb5a1e1576b",
  "result": {
    "markdown": "---\ntitle: 利用survminer包ggforest函数制作用森林图，直观化展示比值比数据！\ndate: '2022-02-21'\nslug: r-ggforest\nlink: https://chenq.site/tech/2022-r-ggforest/\ncategories: [R, 科研作图]\nkeywords: [R,科研作图,ggforest]\nsummary: '森林图是Meta分析中最常用的结果表达形式，但是现在被用来表达一些比值比数据，使结果更形象的展示出来。一起来看看如何高效的制作森林图吧！'\n---\n\n\n## 什么是森林图？\n\n森林图是在平面直角坐标系中，以一条垂直的无效线（横坐标刻度为1或0）为中心，用平行于横轴的多条线段描述了每个被纳入研究的效应量和可信区间（confidence interval，CI），用一个棱形（或其它图形）描述了多个研究合并的效应量及可信区间。它非常简单和直观地描述了Meta分析的统计结果，是Meta分析中最常用的结果表达形式。\n\n## 实现森林图的方法有哪些？\n在R语言里，实现森林图的方法有很多，比如forestplot包，ggforestplot包，以及survminer包等都可以，当然也可以利用ggplot2包实现更自由的绘制森林图。\n\n今天我们主要讲讲利用survminer包的ggforest函数绘制森林图\n\n这个包有个优势就是可以直接利用模型拟合输出的结果直接输出森林图，不用另外单独准备数据。比如我们可以用survival包来做预后的影响因素分析，然后利用survminer包里的ggforest函数读取survival包拟合的模型结果绘制森林图。\n\n## 如何安装survminer包？\n照例两种方式，要么从R CRAN的不同镜像上安装，要么从github上安装。\n\n第一种方式：从CRAN镜像上安装\n```r\ninstall.packages(\"survminer\")\n```\n\n第二种方式：从github上安装\n\n```r\n# 首先判断运行环境里是否安装了devtools包，如果没有安装的话，需要先安装devtools包\nif(!require(devtools)) install.packages(\"devtools\")\n# 利用devtools从github上安装survminer包\ndevtools::install_github(\"kassambara/survminer\", build_vignettes = FALSE))\n```\n\n## 准备数据\n加载survival包时，自动加载了colon数据框，我们就可以利用这个数据来拟合预后风险。\n\n首先加载survival包，并查看一下colon数据框的基本情况\n\n::: {.cell}\n\n```{.r .cell-code}\n# 加载dplyr包进行数据处理\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n载入程辑包：'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(survival)\n# 看下colon数据的结构\nhead(colon)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id study      rx sex age obstruct perfor adhere nodes status differ extent\n1  1     1 Lev+5FU   1  43        0      0      0     5      1      2      3\n2  1     1 Lev+5FU   1  43        0      0      0     5      1      2      3\n3  2     1 Lev+5FU   1  63        0      0      0     1      0      2      3\n4  2     1 Lev+5FU   1  63        0      0      0     1      0      2      3\n5  3     1     Obs   0  71        0      0      1     7      1      2      2\n6  3     1     Obs   0  71        0      0      1     7      1      2      2\n  surg node4 time etype\n1    0     1 1521     2\n2    0     1  968     1\n3    0     0 3087     2\n4    0     0 3087     1\n5    0     1  963     2\n6    0     1  542     1\n```\n:::\n:::\n\n\n\n## 首先我们对colon数据预处理一下\n我们对sex变量和differ变量因子化，并增加中文值标签。\n\n如果我们想在森林图里显示交互作用项，那么就需要提前处理数据，比如我们想看surg和nodes的交互作用，我们可以把两者的相乘项加入模型里。\n\n::: {.cell}\n\n```{.r .cell-code}\n# 预处理colon数据框\ncolon <- colon%>%\n  mutate(sex=factor(sex, labels = c(\"女性\", \"男性\")),\n         differ=factor(differ,labels = c(\"高分化\", \"中分化\", \"低分化\")),\n         # 为模型拟合准备交互项\n         interaction=surg*nodes,\n         surg= factor(surg,label=c(\"非手术组\",\"手术组\"))\n         )\n```\n:::\n\n\n\n## 利用colon数据来拟合预后风险\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- coxph(Surv(time, status) ~ sex +  differ + surg + nodes + interaction, data = colon )\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\ncoxph(formula = Surv(time, status) ~ sex + differ + surg + nodes + \n    interaction, data = colon)\n\n  n= 1776, number of events= 876 \n   (因为不存在，82个观察量被删除了)\n\n                  coef exp(coef)  se(coef)      z Pr(>|z|)    \nsex男性      -0.094440  0.909883  0.068029 -1.388   0.1651    \ndiffer中分化 -0.030810  0.969660  0.116865 -0.264   0.7921    \ndiffer低分化  0.257933  1.294252  0.136498  1.890   0.0588 .  \nsurg手术组    0.176022  1.192465  0.102487  1.718   0.0859 .  \nnodes         0.081409  1.084814  0.007312 11.133   <2e-16 ***\ninteraction   0.023728  1.024012  0.016809  1.412   0.1581    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n             exp(coef) exp(-coef) lower .95 upper .95\nsex男性         0.9099     1.0990    0.7963     1.040\ndiffer中分化    0.9697     1.0313    0.7712     1.219\ndiffer低分化    1.2943     0.7726    0.9904     1.691\nsurg手术组      1.1925     0.8386    0.9755     1.458\nnodes           1.0848     0.9218    1.0694     1.100\ninteraction     1.0240     0.9766    0.9908     1.058\n\nConcordance= 0.633  (se = 0.009 )\nLikelihood ratio test= 153.9  on 6 df,   p=<2e-16\nWald test            = 210.2  on 6 df,   p=<2e-16\nScore (logrank) test = 214.7  on 6 df,   p=<2e-16\n```\n:::\n:::\n\n\n## 利用ggforest函数输出森林图\n\nggforest函数可以自由定义的参数不多，主要有以下几个:\n\n1. model= modeldata，指定ggforest函数读取的模型拟合数据\n1. data= colon，指定输出模型的数据\n1. cpositions= c(0.01,0.1,0.3)，指定森林图的前三列分别离最左侧有多远，0为最左侧，1为最右侧，大家可以根据放入模型的变量的值标签的长度来自行定义。\n1. refLable=“参照组”，用来指定比值比指标参考组的显示标签，默认的为Reference，我们可以给它调整为参照组。\n1. fontsize=0.7，调整图里的文字大小。\n1. noDigits=2，设置小数点的位数，默认值为2。\n1. main=“图标的标题”，设置图的标题。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survminer)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n载入需要的程辑包：ggplot2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n载入需要的程辑包：ggpubr\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n载入程辑包：'survminer'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:survival':\n\n    myeloma\n```\n:::\n\n```{.r .cell-code}\nggforest(model = model,\n         data = colon,\n         cpositions = c(0.01,0.1,0.3),\n         refLabel = \"参照组\",\n         fontsize=0.7,\n         noDigits=2,\n         main = \"预后因素回归分析\")->pp\nggsave(\"forest.png\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n![森林图](forest.png)\n好了，森林图出来了，如果你想对输出的图进一步处理的话，可以用本站前面介绍的magick包或者其它包进行更加个性化的调整和处理。\n\n## 小结\n\n利用survminer包ggforest函数制作森林图既有优势也有缺点，优势是可以利用前期拟合的模型输出结果，不用再专门整理数据，当然有优势也就有劣势，就是可以调整的参数较少，缺少更个性化的调整参数。\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}