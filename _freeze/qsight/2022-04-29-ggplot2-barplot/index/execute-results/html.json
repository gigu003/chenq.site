{
  "hash": "cb4e3791757a0dde27e797402590f3d2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 利用ggplot2包绘制barplot简单条形图\nauthor: 陈琼\ndate: '2022-04-29'\nslug: ggplot2-barplot\nlink: https://chenq.site/tech/2022-ggplot2-barplot/\ncategories:\n  - R\n  - 科研作图\ntags:\n  - 科研作图\n  - ggplot2\nsoft: R\nkeywords:\n  - 条形图\n  - barplot\n  - R语言\n  - ggplot2\nsummary: '本篇文章介绍如何在R语言里利用ggplot2包绘制barplot条形图，使用到的函数为geom_bar()函数。'\nfeature: true\n---\n\n## 什么是条形图？\n\n条形图（bar chart）是用宽度相同的条形的高度或长短来表示数据多少的图形。条形图可以横置或纵置，纵置时也称为柱形图（column chart）。此外，条形图有简单条形图、复式条形图等形式。\n\n\n## 条形图有哪些类型\n\n- 简单条形图：\n- 簇状条形图和三维簇状条形图：簇状条形图比较各个类别的值。在簇状条形图中，通常沿垂直轴组织类别，而沿水平轴组织数值。三维簇状条形图以三维格式显示水平矩形，而不以三维格式显示数据。\n- 堆积条形图和三维堆积条形图：堆积条形图显示单个项目与整体之间的关系。三维堆积条形图以三维格式显示水平矩形，而不以三维格式显示数据。\n- 百分比堆积条形图和三维百分比堆积条形图：此类型的图表比较各个类别的每一数值所占总数值的百分比大小。三维百分比堆积条形图表以三维格式显示水平矩形，而不以三维格式显示数据。\n\n## 如何绘制barplot条形图？\n\n### 绘制简单barplot条形图\n如果你还没有安装ggplot2包，那么请先安装此包，如果已经安装，请忽略此步骤。\n```r\ninstall.packages(\"ggplot2\")\n```\n\n首先，准备一下绘制barplot条形图所需的数据，我们就拿[河南省前10位癌症发病率数据](https://chenq.site/report/2020/)来举例。\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data.frame(\n  site=c(\"肺癌\",\"乳腺癌\",\"胃癌\",\"食管癌\",\"肝癌\",\"宫颈癌\",\"结直肠癌\",\"子宫体癌\",\"甲状腺癌\",\"卵巢癌\"),\n  incid=c(53.35,39.25,35.74,31.11,29.15,19.24,18.15,9.99,7.92,7.04))\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    site incid\n1   肺癌 53.35\n2 乳腺癌 39.25\n3   胃癌 35.74\n4 食管癌 31.11\n5   肝癌 29.15\n6 宫颈癌 19.24\n```\n\n\n:::\n:::\n\n利用ggplot2包的geom_bar()函数绘制简单条形图\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nplot <- data %>%\n  # 通过reorder(site,-incid)来改变条形的顺序，按照incid值的大小排列条形\n  ggplot(aes(x=reorder(site,incid), y=incid)) +\n  # 输出条形图，并把条形填充为蓝色\n  geom_bar(stat=\"identity\",fill=\"steelblue\")+\n  theme(text=element_text(family=\"STKaiti\",size=14))\nggsave(\"plot.png\")\n```\n:::\n\n![条形图](plot.png)\n\n把垂直条形图转换为水平条形图，通过coord_fip()坐标轴转换函数实现。\n\n::: {.cell}\n\n```{.r .cell-code}\nplot + \n  # 转置坐标轴\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![条形图：坐标轴转置](index_files/figure-html/unnamed-chunk-3-1.png){fig-alt='简单条形图' width=672}\n:::\n:::\n\nggplot2包里有一些自带的主题，我们可以应用这些主题来快速的调整图的样式。\n\n::: {.cell}\n\n```{.r .cell-code}\nplot+coord_flip()+\n  # 使用classic主题\n  theme_classic()+\n    theme(text=element_text(family=\"STKaiti\",size=14))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n然后我们进一步对条形图进行修饰，比如更改坐标轴标题、把x轴由底部调整至顶部显示、添加条形图数据标签等等。\n\n::: {.cell}\n\n```{.r .cell-code}\nplot+\n  # 对坐标轴进行转置\n  coord_flip()+\n  # 使用经典的科研作图主题\n  theme_classic()+\n  # 设置x轴标题\n  xlab(\"癌种\")+\n  # 设置y轴标题\n  ylab(\"发病率(1/10万)\")+\n  # 把转置后的x轴位置调整到顶部显示\n  scale_y_continuous(position=\"right\")+\n  # 添加数据标签\n  geom_text(aes(label=incid), size=3.5)+\n theme(text=element_text(family=\"STKaiti\",size=14))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n### 绘制分组barplot条形图\n准备绘制分组条形图的数据，我们可以添加不同癌种的死亡率数据，分为两组：发病率和死亡率。\n\n::: {.cell}\n\n```{.r .cell-code}\ndata2 <- data.frame(\n  site=c(\"肺癌\",\"乳腺癌\",\"胃癌\",\"食管癌\",\"肝癌\",\"宫颈癌\",\"结直肠癌\",\"子宫体癌\",\"甲状腺癌\",\"卵巢癌\",\"肺癌\",\"乳腺癌\",\"胃癌\",\"食管癌\",\"肝癌\",\"宫颈癌\",\"结直肠癌\",\"子宫体癌\",\"甲状腺癌\",\"卵巢癌\"),\n  type=c(rep(\"发病率\",10),rep(\"死亡率\",10)),\n  value=c(53.35,39.25,35.74,31.11,29.15,19.24,18.15,9.99,7.92,7.04,41.22,9.92,27.87,23.36,24.46,6.05,8.85,2.16,0.76,3.00))\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    site incid\n1   肺癌 53.35\n2 乳腺癌 39.25\n3   胃癌 35.74\n4 食管癌 31.11\n5   肝癌 29.15\n6 宫颈癌 19.24\n```\n\n\n:::\n:::\n\nggplot2在使用fill添加分组选项时，会默认绘制堆积条形图，我们可以使用position_dodge() 函数来改变默认情况，绘制分组条形图。\n\n::: {.cell}\n\n```{.r .cell-code}\ndata2%>%\n  ggplot(aes(x=reorder(site,value), y=value, fill=type)) +\n  # 使用position=position_dodge()改变堆积条图为分组条图\n  geom_bar(stat=\"identity\",position=position_dodge())+\n  coord_flip()+\n  theme_classic()+\n  scale_y_continuous(position = \"right\")+\n  xlab(\"癌种\")+\n  ylab(\"率(1/10万)\")+\n  geom_text(aes(label=value),size=2,position=position_dodge(0.9))+\n    theme(text=element_text(family=\"STKaiti\",size=14))->plot2\nplot2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n我们可以改变条形图条的颜色，也可以修改图例的位置、标题等等。\n\n::: {.cell}\n\n```{.r .cell-code}\nplot2+\n  # 修改条的颜色为以下两个色号\n  scale_fill_manual(values=c('#999999','#E69F00'))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 我们也可以使用color palettes改变分组条图的颜色\nplot2+\nscale_fill_brewer(palette=\"Blues\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# 我们可以利用theme()对图例进行修改\nplot2+\n  theme(\n    # 修改图例的位置\n    legend.position = c(0.8,0.2),\n    # 取消图例的标题\n    legend.title=element_blank()\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}