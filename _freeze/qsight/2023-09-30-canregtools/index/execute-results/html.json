{
  "hash": "738e79014e2df59c68d4adb0789faa1c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R包canregtools：肿瘤登记可视化和自动化报告\"\nsubtitle: \"促进肿瘤登记数据的分析、可视化和报告流程化\"\ndescription: |\n  为了使肿瘤登记数据分析和可视化更加容易，我写了一个R语言软件包“*canregtools*”，这篇博文将详细介绍这个R包的功能和使用。\nexecute: \n  warning: false\nauthors:\n  - name: 陈琼\n    affilliation: 河南省癌症中心/河南省肿瘤医院\n    email: chenq08@126.com\ndate: 2023-09-30\ncategories:\n  - 肿瘤登记\n  - R语言\n  - canregtools\nimage: preview.jpg\n---\n\nR语言包“*canregtools*”提供了肿瘤登记常规数据分析中常用的数据处理、可视化、自动化报告等功能，该包的主要目的是通过一系列R语言函数功能实现肿瘤登记数据常规数据分析和数据可视化功能，并通过整合不同函数功能从而实现应用于不同场景的肿瘤登记报告，在统一的R语言环境中让肿瘤登记数据分析更流畅。\n\n目前*canregtools*包还处在开发阶段，新的功能会不断补充更新到该包中，大家可以登陆[canregtools包网站](https://caregtools.chenq.site)了解开发进度和最新功能，如果您有关于该包的建议，请[发送邮件](mailto:chenq08@126.com)给我。\n\n## canregtools的安装\n该包还正处于开发阶段，暂时还没有准备将其提交至CRAN，我们会等其功能稳定之后再考虑将其正式提交。目前代码托管在github上，大家可以通过下面的代码进行安装。\n\n```{{r}}\nlibrary(devtools)\ninstall_github(\"gigu003/canregtools\")\n```\n\n在开始介绍canregtools包之前，首先看看我们包的运行环境。\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(devtools)\nlibrary(sessioninfo)\nsession_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.2 (2024-10-31)\n os       macOS Sequoia 15.3.2\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Asia/Shanghai\n date     2025-03-30\n pandoc   3.6.3 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n cachem        1.1.0   2024-05-16 [1] CRAN (R 4.4.0)\n cli           3.6.3   2024-06-21 [1] CRAN (R 4.4.0)\n devtools    * 2.4.5   2022-10-11 [1] CRAN (R 4.4.0)\n digest        0.6.37  2024-08-19 [1] CRAN (R 4.4.1)\n ellipsis      0.3.2   2021-04-29 [1] CRAN (R 4.2.0)\n evaluate      0.24.0  2024-06-10 [1] CRAN (R 4.4.0)\n fastmap       1.2.0   2024-05-15 [1] CRAN (R 4.4.0)\n fs            1.6.4   2024-04-25 [1] CRAN (R 4.4.0)\n glue          1.8.0   2024-09-30 [1] CRAN (R 4.4.1)\n htmltools     0.5.8.1 2024-04-04 [1] CRAN (R 4.4.0)\n htmlwidgets   1.6.4   2023-12-06 [1] CRAN (R 4.4.0)\n httpuv        1.6.15  2024-03-26 [1] CRAN (R 4.4.0)\n jsonlite      1.8.8   2023-12-04 [1] CRAN (R 4.3.1)\n knitr         1.48    2024-07-07 [1] CRAN (R 4.4.0)\n later         1.3.2   2023-12-06 [1] CRAN (R 4.4.0)\n lifecycle     1.0.4   2023-11-07 [1] CRAN (R 4.3.1)\n magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.2.0)\n memoise       2.0.1   2021-11-26 [1] CRAN (R 4.3.0)\n mime          0.12    2021-09-28 [1] CRAN (R 4.2.0)\n miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.2.2)\n pkgbuild      1.4.4   2024-03-17 [1] CRAN (R 4.4.0)\n pkgload       1.3.4   2024-01-16 [1] CRAN (R 4.4.0)\n profvis       0.3.8   2023-05-02 [1] CRAN (R 4.3.0)\n promises      1.3.0   2024-04-05 [1] CRAN (R 4.4.0)\n purrr         1.0.2   2023-08-10 [1] CRAN (R 4.4.0)\n R6            2.5.1   2021-08-19 [1] CRAN (R 4.2.0)\n Rcpp          1.0.13  2024-07-17 [1] CRAN (R 4.4.0)\n remotes       2.5.0   2024-03-17 [1] CRAN (R 4.4.0)\n rlang         1.1.4   2024-06-04 [1] CRAN (R 4.4.0)\n rmarkdown     2.29    2024-11-04 [1] CRAN (R 4.4.1)\n rstudioapi    0.16.0  2024-03-24 [1] CRAN (R 4.4.0)\n sessioninfo * 1.2.2   2021-12-06 [1] CRAN (R 4.2.0)\n shiny         1.8.1.1 2024-04-02 [1] CRAN (R 4.4.0)\n stringi       1.8.4   2024-05-06 [1] CRAN (R 4.4.0)\n stringr       1.5.1   2023-11-14 [1] CRAN (R 4.3.1)\n urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.2.0)\n usethis     * 2.2.3   2024-02-19 [1] CRAN (R 4.4.0)\n vctrs         0.6.5   2023-12-01 [1] CRAN (R 4.3.1)\n xfun          0.45    2024-06-16 [1] CRAN (R 4.4.0)\n xtable        1.8-4   2019-04-21 [1] CRAN (R 4.2.0)\n yaml          2.3.9   2024-07-05 [1] CRAN (R 4.4.0)\n\n [1] /Users/qc0824/Library/R\n [2] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n## 主要功能介绍\n该包的主要功能分为以下几类：数据读取、数据整理、指标计算、可视化、表单制作和生成报告等。\n\n## 数据读取\n目前该包可以读取国家癌症中心发布的数据上报格式（call for data），包括以EXCEL格式保存的单年数据或生存数据，通过*read_canreg()*函数来实现。我们在包里内置了按照国家癌症中心数据上报格式准备的excel数据文档(\"411721.xls\")。\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll}\nlibrary(canregtools)\nfile <- system.file(\"extdata\", \"411721.xlsx\", package = \"canregtools\")\ndata <- read_canreg(file)\n```\n:::\n\n我们给读入的原始数据定义一个类\"canreg\"， 我们可以通过class函数查看一下。\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"canreg\" \"list\"  \n```\n\n\n:::\n:::\n\n\n\n## 数据整理\n数据整理函数主要为*count_canreg()*，它可以把读入的class类型为*canreg*的原始数据整理为各个变量的频数数据，我们给这个频数数据定义了一个类为‘fbswicd’。\n\n::: {.cell}\n\n```{.r .cell-code}\nfbsw <- count_canreg(data)\nclass(fbsw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"fbswicd\" \"list\"   \n```\n\n\n:::\n:::\n\n这个函数还可以指定一些参数值从而实现对*年龄*、*癌症分类*、*语言类型*使用不同的分类方法。\n\n比如癌症分类方法，我们按照不同解剖学系统进行分类、大类或小类进行分类。\n\n::: {.cell}\n\n```{.r .cell-code}\n# 指定癌症分类方法为system\nfbsw <- count_canreg(data, cancer_type = \"system\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 指定癌症分类方法为small，并指定输出语言为英语\nfbsw <- count_canreg(data, cancer_type = \"small\")\n```\n:::\n\n## 统计指标计算\n### 年龄标化率\n计算年龄标化率的函数为ageadjust()，可以基于不同标准人口计算年龄标化率，并基于不同方法估计可信区间。该函数主要有以下参数：\n\n```{{r}}\n#| eval: false\nageadjust(\n  count, #不同年龄组病例数\n  pop, #不同年龄组风险人口数\n  rate = NULL, #不同年龄组发病率\n  stdpop = NULL, #各年龄组标准人口数\n  method = \"gamma\", #估计可信区间的方法，选项为'gamma', 'normal'，'lognormal'\n  conf_level = 0.95, #设置可信区间水平, 范围为0-1， 0.95则输出95%可信区间\n  mp = 1e+05\n)\n```\n\n举个具体的例子：\n\n::: {.cell}\n\n```{.r .cell-code}\ncases <- c(50, 60, 45, 70)\npop <- c(1000, 1200, 1100, 900)\nspop <- c(800, 1000, 1100, 900)\nageadjust(cases, pop, stdpop = spop, mp = 100000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$cases\n[1] 225\n\n$cr\n[1] 5357.143\n\n$cr_var\n[1] 1.27551e-05\n\n$cr_lci\n[1] 4679.972\n\n$cr_uci\n[1] 6104.765\n\n$asr\n[1] 5394.737\n\n$asr_var\n[1] 1.306556e-05\n\n$asr_lci\n[1] 4709.493\n\n$asr_uci\n[1] 6154.046\n```\n\n\n:::\n:::\n\n这是一个向量化的函数，如果你使用tidyverse进行数据处理时，你可以把他放到*mutate*或*reframe*函数内使用。\n\n### 基于类canreg或fbswicd计算标化率\n我们把数据读入R以后被转换为'canreg'类，我可以直接基于'canreg'数据计算标化率。函数为*create_asr()*，该函数的参数如下：\n\n```{{r}}\n#| eval: false\ncreate_asr(\n  x, # 类为canreg或fbswicd的数据\n  ..., #指定输出的分类: year,sex,icd_cat\n  event = fbs, #指定计算年龄率的变量\n  pop = rks, # 指定人口数变量\n  agegrp = agegrp, #指定年龄分组变量\n  std = c(china, segi), #指定标准人口\n  mp = 1e+05, \n  decimal = 2, #输出小数位\n  show_var = FALSE, #是否输出方差\n  show_ci = FALSE, #是否输出可信区间\n  keep_sex_specific = FALSE #是否保留年龄别专属癌种值\n)\n```\n\n基于*canreg*类数据计算标化率,同时也可以输出0-74岁累积率和35-64岁截缩率。\n::: {.cell}\n\n```{.r .cell-code}\nasr <- create_asr(data, year, sex, cancer) |> \n  add_labels()\nasr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 56 × 13\n    year sex   cancer site             icd10 no_cases    cr asr_cn2000 asr_wld85\n   <int> <fct> <chr>  <fct>            <chr>    <int> <dbl>      <dbl>     <dbl>\n 1  2016 男性  101    口腔和咽（除外鼻咽）…… C00-…       13  2.85       2.46      2.73\n 2  2016 男性  102    鼻咽             C11          7  1.54       1.37      1.16\n 3  2016 男性  103    食管             C15        157 34.5       29.0      30.6 \n 4  2016 男性  104    胃               C16        135 29.6       24.0      24.9 \n 5  2016 男性  105    结直肠肛门       C18-…       72 15.8       12.4      12.6 \n 6  2016 男性  106    肝脏             C22        180 39.5       31.7      31.8 \n 7  2016 男性  107    胆囊及其他       C23-…       16  3.51       2.74      2.7 \n 8  2016 男性  108    胰腺             C25         27  5.93       4.88      5.03\n 9  2016 男性  109    喉               C32         11  2.41       1.89      1.78\n10  2016 男性  110    气管、支气管、肺 C33-…      320 70.2       59.2      61.0 \n# ℹ 46 more rows\n# ℹ 4 more variables: truncr_cn2000 <dbl>, truncr_wld85 <dbl>, cumur <dbl>,\n#   prop <dbl>\n```\n\n\n:::\n:::\n\n同样，也可以基于*fbswicd*类数据计算标化率。\n::: {.cell}\n\n```{.r .cell-code}\nasr <- create_asr(fbsw, year, sex, cancer) |> \n  add_labels(lang = \"en\")\nasr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 110 × 13\n    year sex   cancer site             icd10 no_cases    cr asr_cn2000 asr_wld85\n   <int> <fct> <chr>  <fct>            <chr>    <int> <dbl>      <dbl>     <dbl>\n 1  2016 Male  1      Lip              C00          0  0          0         0   \n 2  2016 Male  10     Esophagus        C15        157 34.5       29.0      30.6 \n 3  2016 Male  11     Stomach          C16        135 29.6       24.0      24.9 \n 4  2016 Male  12     Small Intestine  C17          3  0.66       0.51      0.55\n 5  2016 Male  13     Colon            C18         33  7.24       5.79      6.1 \n 6  2016 Male  14     Rectum           C19-…       38  8.34       6.43      6.36\n 7  2016 Male  15     Anus             C21          1  0.22       0.18      0.16\n 8  2016 Male  16     Liver            C22        180 39.5       31.7      31.8 \n 9  2016 Male  17     Gallbladder and… C23-…       16  3.51       2.74      2.7 \n10  2016 Male  18     Pancreas         C25         27  5.93       4.88      5.03\n# ℹ 100 more rows\n# ℹ 4 more variables: truncr_cn2000 <dbl>, truncr_wld85 <dbl>, cumur <dbl>,\n#   prop <dbl>\n```\n\n\n:::\n:::\n\n\n## 数据可视化\n### 绘制人口金字塔图\n绘图函数为draw_pyramid()，该函数的主要功能为绘制一个或多个人口金字塔，用于展示人口数据结构。该函数主要有以下参数：\n```{{r}}\n#| eval: false\ndraw_pyramid(\n  x, # 类为\"canreg\"或\"fbswicd\"的数据 \n  show_value = TRUE, #是否在人口金字塔上显示人口数\n  show_prop = TRUE,  #是否在人口金字塔上显示人口比例\n  left_axis = NULL, #设置人口金字塔左侧坐标轴值\n  right_axis = NULL, #设置人口金字塔右侧坐标轴值\n  axis_fm = \"g\", \n  axis_bm = \"\",\n  axis_bi = 3,\n  cgap = 0.3, # 人口金字塔的中间间隔宽度\n  cstep = 1, # 间隔1个条形显示人口金字塔\n  csize = 1, #设置字体大小，默认为1\n  labs = c(\"Males\", \"Ages\", \"Females\"), # 设置左中右坐标标签\n  gl = TRUE, # 是否显示竖型背景条\n  cadj = 0, # 调整标签位置\n  cols = c(\"#006400\", \"#b32134\"), # 设置人口金字塔条颜色\n  dens = c(-1, -1),\n  main = \"\", # 设置人口金字塔图的标题\n  grid = c(2, 3) #如果绘制多个图，设置显示方式，c(2,3) 设置为2行3列\n)\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraw_pyramid(fbsw,\n             csize = 0.8,\n             cgap = 0.4,\n             cols = c(\"steelblue\", \"pink\"),\n             grid = c(1,1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n如果不想显示人口金字塔人口数字可以，设置*show_value = FALSE*，不显示这些数据。\n::: {.cell}\n\n```{.r .cell-code}\ndraw_pyramid(fbsw,\n             csize = 0.8,\n             cgap = 0.4,\n             show_value = FALSE,\n             cols = c(\"steelblue\", \"pink\"),\n             grid = c(1,1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n### 绘制条形图\n肿瘤登记年报中经常会出现各种各样的条形图，该包通过*draw_barchart()*来绘制这种类型的图。该函数的参数如下：\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(showtext)\nshowtext_auto()\nasr <- create_asr(data, event = fbs, sex, cancer) |> \n  select(sex,cancer,asr_cn2000) |> \n  filter(!cancer %in% c(60,61)) |> \n  add_labels(lang=\"en\", label_type = \"abbr\") |> \n  pivot_wider(names_from = sex, values_from = asr_cn2000) |> \n  arrange(M)\n\ndraw_bar(list(asr$M),\n         cates = as.character(asr$site),\n         bar_side = 1,\n         label = c(\"男性\",\"女性\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n```{{r}}\n#| eval: false\ndraw_barchart(\n  data, #用于绘图的数据框\n  plot_var = cr, #用于绘图的变量\n  cate_var = icd_cat, #分类变量\n  group_var = year, #分组变量\n  side_var = sex,\n  topn = 10,\n  bar_side = 1,\n  nrow = 2,\n  ...\n)\n```\n\n\n::: {.cell .column-screen-left}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(showtext)\nshowtext_auto()\nasr1 <- create_asr(data, event = fbs, sex, cancer) |>\n  bind_rows(create_asr(data, event = fbs, cancer)) |> \n  select(sex, cancer, asr_cn2000) |> \n  mutate(type = \"发病率\")\nasr2 <- create_asr(data, event = sws, sex, cancer) |>\n  bind_rows(create_asr(data, event = sws, cancer)) |> \n  select(sex, cancer, asr_cn2000) |> \n  mutate(type = \"死亡率\") |> \n  bind_rows(asr1) |> \n  drop_total() |> \n  drop_others() |> \n  add_labels(label_type = \"abbr\") |> \n  mutate(sex=as.character(sex))\n\ndraw_barchart(asr2,\n              plot_var = asr_cn2000,\n              cate_var = site,\n              group_var = type,\n              side_var = sex,\n              bar_side = 2,\n              grid = c(1, 3))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nasr2 |> \n  filter(!sex == \"合计\") |> \n  arrange(type,sex,cancer) |> \ndraw_barchart(\n              plot_var = asr_cn2000,\n              cate_var = site,\n              group_var = type,\n              side_var = sex,\n              grid = c(1, 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}