{
  "hash": "23797d721d40ceb9935a0897724245a0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 图形化展示比值比和可信区间数据的另一种方式\ndate: '2022-02-27'\nslug: point-estimate\nlink: https://chenq.site/tech/2022-point-estimate/\ncategories:\n  - R\n  - 科研作图\nkeywords:\n  - 科研作图\n  - R语言\n  - ggplot2\nsummary: '一种类型数据的展示方式有很多种，今天我们用另外一种图示方式展示比值比和可信区间数据，快来看看！'\nimage: \"ratio.png\"\n---\n\n\n\n\n其实一类数据的展示方式有多种，可以用表格的形式展示，也可以用图的形式来展示。两种方式各有优缺点，表格可以展示信息量比较丰富的数据，但是不太直观；而图的展示方式比较直观，但是展示的信息量有限。所以，我们在选择展示方式时，需要平衡这两者之间的关系。\n\n我们在前面的[一篇博文](https://chenq.site/tech/2022-r-ggforest/)中介绍了利用**森林图**的方式展示比值比数据，这种方式对于展示多个不同类型变量，不同亚组的比值比数据比较有优势，但是如果我们的研究结果变量类型比较单一的话，也可以试试我们下面一种展示方式。\n\n首先，我们生成一组比值比可信区间数据，包含5个变量：group分组1,2,3,4分别代表Q1、Q2、Q3和Q4；type：指标类型，1代表PM10,2代表PM2.5；value代表OR值，lower和upper分别代表95%可信区间的下限和上限。\n\n然后，我们把group和type两个变量因子化，并添加相应的值标签，这样标签数据就可以显示到图上。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\ndf <- data.frame(\n  group=c(1,2,3,4,1,2,3,4),\n  type=c(rep(1,4),rep(2,4)),\n  value = c(0.5, 2, 1.5, 1.8, 0.9,1.2,1.4,1.6),\n  upper = c(0.8,2.5, 1.9, 2.6,1.1,1.4,1.8,2.0),\n  lower = c(-0.3, 1.0, 1.1, 0.1,0.7,1.1,1.2,1.3)\n)\n\ndf<-df%>%mutate(group=factor(group,labels=c(\"Q1\",\"Q2\",\"Q3\",\"Q4\")),\n                type=factor(type,labels=c(\"PM10\",\"PM2.5\")))\n```\n:::\n\n\n\n\n我们可以利用ggplot2的geom_point函数绘制OR值的点，利用geom_errorbar函数绘制95%可信区间的上下限值，利用geom_hline函数绘制参考线，然后利用facet_wrap函数把两个指标的图绘制到一张图上。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndf%>%ggplot(aes(x=group,y=value))+\n  geom_point(aes(colour=type),shape=\"square\",size=3)+\n  geom_hline(aes(yintercept=1),linetype=8)+\n  geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1)+\n  scale_y_continuous(breaks = seq(-1, 3, by = 0.5)) +\n  facet_wrap(~type)+\n  labs(x = \"Hypertension\", y = \"Adjusted OR and 95% CI\")+\n  theme_classic()+\n  theme(\n    strip.text.x = element_blank(),\n    legend.position = c(0.1,0.9),\n    legend.title =  element_blank()\n  )->pp\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\nggsave(\"ratio.png\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSaving 7 x 5 in image\n```\n\n\n:::\n:::\n\n\n\n\n![比值比图](ratio.png)\n\n上图就是我们最终的结果。R的绘图功能很强大，很灵活，可以实现很精确的绘图，让我们坚持每天学一点科研作图吧！\n\n如果你有不能绘制的统计图形，请在下面的评论框里留言吧！",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}