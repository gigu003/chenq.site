{
  "hash": "90468e588b31cf21f82f26be1cfccc8c",
  "result": {
    "markdown": "---\ntitle: \"肿瘤登记数据上报经验分享：R语言批量导入导出excel数据\"\nsubtitle: \"肿瘤登记数据上报实践\"\ndescription: |\n  每年向国家肿瘤登记处上报当年肿瘤登记数据是每个省级肿瘤登记处的每年的工作内容，而当县区级登记处的数量很多的时候，数据整理工作变得很琐碎，这篇博文将向大家介绍如何处理肿瘤登记上报过程中的数据处理。\nauthor: 陈琼\ndate: 2023-05-23\ncategories:\n  - 数据处理\n  - R\n  - 肿瘤登记\ntags:\n  - 肿瘤登记\n  - 数据处理\n  - R\nimage: \"files.jpg\"\ndraft: false\ncode-annotations: hover\n---\n\n\n\n## 随访数据上报要求\n随访数据要求上报两部分资料，第一部分是*随访资料*，第二部分是*寿命表资料*，并分别以FB和LT为表单名称保存到Excel中。\n\n### 随访资料\n要求上报建立登记处以来的所有癌症病例并随访至上一年末。\n\n具体上报变量如下：\n\n- Registr：登记编号\n- ID: 身份识别号码\n- Sex: 性别\n- Age: 年龄\n- Birthda: 出生日期\n- Inciden: 出生日期\n- ICDO3: ICDO3解剖学部位\n- Morp: ICDO3形态学编码\n- Beha: ICDO3行为编码\n- Grad: ICDO3分级编码\n- Icd10: ICD10编码\n- Deathda: 死亡日期\n- Basi: 诊断依据\n- Trib: 民族\n- Marri: 婚姻状态\n- Mult: 是否多原发\n- Lastcontact: 最后接触日期\n- Status: 生存状态\n- Caus: 死亡原因\n\n### 寿命表数据\n要求上报与随访资料同年份的寿命表资料。具体变量如下：\n\n- 年份(Year):与随访数据库覆盖年份相同\n- 性别(Sex):合计=0，男性=1，女性=2\n- 年龄组(Age): 0, 1-, 5-, ..., 80-, 85及以上， 用组段下限年龄值表示\n- 死亡数(Death):覆盖人群中的全死亡数\n- 人口数(Popu):户籍人口\n\n## 当年发病死亡数据上报\n当年发病死亡数据上报的内容要求与随访资料要求上报的变量是一样的，只不过要分为三部分：\n\n- 发病资料：发病日期为上报年份的所有癌症病例资料；\n- 死亡资料：死亡日期为要求上报年份的所有癌症病例资料；\n- 人口数据：要求上报年份登记处所有在地分年龄分性别户籍人口数。\n\n## 存在问题及解决方法\n河南省肿瘤登记采用网络直报信息管理系统进行日常数据的收集和管理，在进行数据上报的时候，我们需要把最新的数据分登记处按照上报格式导出就可以了，这个过程中也涉及了变量名的更改等。\n\n首先加载相关R语言包\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(openxlsx)\nlibrary(Hmisc)\nlibrary(haven)\n```\n:::\n\n\n\n\n\n我们在code.mdb数据库的registry表中存储了相关登记处的信息，report2019这个变量标记了哪些登记处入选了河南省肿瘤登记年报。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 从code字典里筛选出2019年年报纳入的登记处\nregistrys <- mdb.get(\"code.mdb\",tables = c(\"registry\")) %>% \n  filter(report2019==1) %>% \n  select(areacode,city,county)\nregistrys$areacode <- as.character(registrys$areacode)\n```\n:::\n\n\n\n通下面的程序，我们把选择需要上报的变量以及把上报变量更改为上报模板要求的变量名称。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 读取肿瘤登记数据\ncanreg <- read_sas(\"tumorinfo.sas7bdat.zip\") %>% \n  rename_all(tolower) %>% # <1>\n  select(registr,indno,sex,age,birthda,inciden,topo,morp,beha,grad,autoicd10,deathda,basi,state,caus,dlc,areacode) %>% # <2>\n  rename(id=indno,icdo3=topo,icd10=autoicd10,status=state,lastcontact=dlc) # <3>\n```\n:::\n\n\n1. 把所有变量名改为小写字母\n2. 选择需要上报的变量\n3. 把变量名改成上报模板要求的变量名\n\n我们通过下面的程序把寿命表数据转换成上报格式要求的形式。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 整理寿命表数据\nlifetable <- read_sas(\"population.sas7bdat.zip\") %>% \n  rename_all(tolower) %>% \n  mutate(areacode = substr(addcode,1,6)) %>% \n  filter(areacode %in% areacodes, year >= 2008, year <= 2021) %>% \n  select(areacode,year,sex,type,p0:p85) %>%\n  pivot_longer(cols = p0:p85, names_to = c(\"agegrp\"), values_to =c(\"count\")) %>% \n  mutate(type=ifelse(type==1,\"pop\",\"death\")) %>% \n  pivot_wider(names_from = c(\"type\"), values_from = c(\"count\")) %>% \n  mutate(agegrp = as.numeric(gsub(\"[^0-9\\\\.]\", \"\", agegrp)),\n         sex=as.numeric(sex)) %>% \n  arrange(areacode,year,sex,agegrp)\n```\n:::\n\n\n下面的程序把随访资料和寿命表数据按照登记处的行政区划和名称保存成excel，虽然for显式循环运行效率有点低，但是对于几十个登记处的数据来说，运行速度还可以。如果数据量大的时候可以考虑使用lapply来批量导出。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (areas in registrys$areacode){\n  fb <- canreg %>% filter(areacode==areas)\n  lt <- lifetable %>% filter(areacode==areas)\n  county <- registrys[registrys$areacode==areas,c(\"county\")]\n  res <- list(FB=fb, LT=lt)\n  write.xlsx(res,paste0(\"report/\",areas,county,\".xlsx\"),colNames = TRUE)\n}\n```\n:::\n\n\n以上程序运行的结果见图 @fig-export 。\n\n\n::: {.cell}\n::: {.cell-output-display}\n![导出excel结果](files.jpg){#fig-export width=879}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}