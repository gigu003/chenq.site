{
  "hash": "abb68d78edc061041ff3175235e64e73",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"tidyverse 筛选你想要的数据\"\nsubtitle: 'filter() 的正确打开方式'\ndate: 2025-07-12\ncategories:\n - 每日一R\nkeep-md: true\n---\n\n> 🧠 本文介绍 `filter()` 函数的常见用法，帮你从数据中精准筛选出感兴趣的记录。\n\n## ✨ filter() 是什么？\n\n`filter()` 是 `dplyr` 包中的一个基础函数，用于**按行筛选数据框中的观测值**，也就是——只留下你想保留的那些记录。\n\n加载 tidyverse 或者只加载 dplyr 后即可使用：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 加载tidyverse\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\n# 或者加载 dplyr\nlibrary(dplyr)\n```\n:::\n\n\n## 🧪 示例数据\n\n我们首先创建一个简单的示例数据集\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tibble::tibble(\n  id = 1:6,\n  sex = c(\"male\", \"female\", \"female\", \"male\", \"female\", \"male\"),\n  age = c(45, 34, 67, 52, 29, 70),\n  site = c(\"lung\", \"breast\", \"colon\", \"lung\", \"thyroid\", \"stomach\")\n)\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n     id sex      age site   \n  <int> <chr>  <dbl> <chr>  \n1     1 male      45 lung   \n2     2 female    34 breast \n3     3 female    67 colon  \n4     4 male      52 lung   \n5     5 female    29 thyroid\n6     6 male      70 stomach\n```\n\n\n:::\n:::\n\n\n## 🎯 用法示例\n\n### ✅ 1. 筛选女性病例\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \nfilter(sex == \"female\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n     id sex      age site   \n  <int> <chr>  <dbl> <chr>  \n1     2 female    34 breast \n2     3 female    67 colon  \n3     5 female    29 thyroid\n```\n\n\n:::\n:::\n\n\n### ✅ 2. 筛选年龄 ≥ 50 岁的病例\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> filter(age >= 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n     id sex      age site   \n  <int> <chr>  <dbl> <chr>  \n1     3 female    67 colon  \n2     4 male      52 lung   \n3     6 male      70 stomach\n```\n\n\n:::\n:::\n\n\n### ✅ 3. 多条件筛选：男性肺癌患者\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> filter(sex == \"male\", site == \"lung\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n     id sex     age site \n  <int> <chr> <dbl> <chr>\n1     1 male     45 lung \n2     4 male     52 lung \n```\n\n\n:::\n:::\n\n\n### ✅ 4. 用 `%in%` 筛选多个部位\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> filter(site %in% c(\"lung\", \"colon\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n     id sex      age site \n  <int> <chr>  <dbl> <chr>\n1     1 male      45 lung \n2     3 female    67 colon\n3     4 male      52 lung \n```\n\n\n:::\n:::\n\n\n### ✅ 5. 使用逻辑 OR（|） 和 AND (&)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# OR：女性 或者 胃癌\ndf |> filter(sex == \"female\" | site == \"stomach\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 4\n     id sex      age site   \n  <int> <chr>  <dbl> <chr>  \n1     2 female    34 breast \n2     3 female    67 colon  \n3     5 female    29 thyroid\n4     6 male      70 stomach\n```\n\n\n:::\n\n```{.r .cell-code}\n# AND：女性 且年龄 < 50\ndf |> filter(sex == \"female\" & age < 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n     id sex      age site   \n  <int> <chr>  <dbl> <chr>  \n1     2 female    34 breast \n2     5 female    29 thyroid\n```\n\n\n:::\n:::\n\n\n## 📝 小提示\n\n- `filter()` 默认保留逻辑值为 `TRUE` 的行；\n- 多个条件可以用逗号、`&` 或 `|`；\n- `%in%` 是筛选多个值的好帮手；\n- 使用管道符 `|>` 可让代码更清晰流畅。\n\n## 📌 小结\n\n- 🧹 `filter()` 是数据清洗的第一步。\n- 🎯 它帮你从“整张表”中找出最关注的部分。\n- 💡 掌握它，是 tidyverse 编程的基本功。\n\n---\n\n🔔 明日预告：`mutate()` 不止会新增变量，还有很多你没用过的用法！\n\n📬 欢迎关注【普癌新声】专栏《每日一R》，每天一点点，掌握数据科学。\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}